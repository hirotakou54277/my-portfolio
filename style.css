/* style.css (レスポンシブ対応版) */
:root {
    --bg-color: #0a0a0a;
    --text-color: #00ff41;
    --shadow-color: rgba(0, 255, 65, 0.5);
    --glitch-color-1: #ff00c1;
    --glitch-color-2: #00fff3;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: 'VT323', monospace;
    font-size: 1.2rem;
    padding: 20px;
    text-shadow: 0 0 5px var(--shadow-color);
    overflow: hidden; /* ページ全体のスクロールを禁止 */
    box-sizing: border-box; /* paddingを含めてサイズ計算する */
}

/* ブラウン管の走査線（スキャンライン）エフェクト */
.scanlines {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        to bottom,
        rgba(18, 16, 16, 0) 50%,
        rgba(0, 0, 0, 0.25) 50%
    );
    background-size: 100% 4px;
    z-index: 2;
    pointer-events: none;
    animation: flicker 0.15s infinite;
}

/* 画面全体のちらつき（フリッカー）エフェクト */
@keyframes flicker {
    0%   { opacity: 0.2; }
    20%  { opacity: 1; }
    80%  { opacity: 0.7; }
    100% { opacity: 1; }
}

.terminal {
    width: 100%;
    height: calc(100vh - 40px);
    border: 1px solid var(--text-color);
    box-shadow: 0 0 10px var(--shadow-color), inset 0 0 10px var(--shadow-color);
    padding: 15px;
    overflow-y: auto;
    box-sizing: border-box;
}

#terminal-output p, 
#terminal-output h2,
#terminal-output ul {
    margin: 0 0 1em 0;
    opacity: 0;
    animation: fadeIn 0.5s forwards;
}

@keyframes fadeIn {
    to { opacity: 1; }
}

h2 {
    color: var(--text-color);
    text-transform: uppercase;
}

.label {
    font-weight: bold;
}

ul {
    list-style: none;
    padding-left: 0;
}

ul li {
    padding-left: 1.5em;
    text-indent: -1.5em;
}
ul li::before {
    content: '■ ';
}

a {
    color: var(--text-color);
    text-decoration: none; /* 下線をなくす */
}

a:hover {
    background-color: var(--text-color);
    color: var(--bg-color);
}

/* フッターと戻るリンクのスタイルを追加 */
footer {
    text-align: center;
    margin-top: 15px;
}
.back-link:hover {
    padding: 2px 5px; /* ホバー時に少し領域を広げる */
}


/* グリッチエフェクト */
.glitch {
    position: relative;
    display: inline-block;
}
.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    overflow: hidden;
    background: var(--bg-color);
}
.glitch::before {
    left: 2px;
    text-shadow: -2px 0 var(--glitch-color-1);
    animation: glitch 3s infinite linear alternate-reverse;
}
.glitch::after {
    left: -2px;
    text-shadow: -2px 0 var(--glitch-color-2);
    animation: glitch 2s infinite linear alternate-reverse;
}
@keyframes glitch {
    0%   { clip-path: inset(89% 0 1% 0); }
    100% { clip-path: inset(69% 0 18% 0); }
}

/* プロンプトとカーソル */
.prompt-line {
    display: flex;
    align-items: center;
}
.prompt {
    margin-right: 0.5em;
}
#cursor {
    animation: blink 1s step-end infinite;
}
@keyframes blink {
    from, to { opacity: 1; }
    50% { opacity: 0; }
}


/* =============================================== */
/* ▼▼▼ ここからレスポンシブ対応のためのコード ▼▼▼ */
/* =============================================== */

@media (max-width: 768px) {
    body {
        /* スマホではページの左右の余白を減らす */
        padding: 10px;
        
        /* 文字サイズを少し小さくして情報量を確保 */
        font-size: 1.1rem;
    }

    .terminal {
        /* bodyのpaddingに合わせて高さを再計算 */
        height: calc(100vh - 20px);

        /* ターミナル内部の余白も少し減らす */
        padding: 10px;
    }
}
