/* top_style.css */
:root {
    --bg-color: #0a0a0a;
    --text-color: #00ff41;
    --shadow-color: rgba(0, 255, 65, 0.5);
    --glitch-color-1: #ff00c1;
    --glitch-color-2: #00fff3;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: 'VT323', monospace;
    font-size: 1.2rem;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden;
}

/* 共通のスキャンライン（走査線）エフェクト */
.scanlines {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        to bottom,
        rgba(18, 16, 16, 0) 50%,
        rgba(0, 0, 0, 0.25) 50%
    );
    background-size: 100% 4px;
    z-index: 10;
    pointer-events: none;
    animation: flicker 0.15s infinite;
}

@keyframes flicker {
    0%   { opacity: 0.2; }
    20%  { opacity: 1; }
    80%  { opacity: 0.7; }
    100% { opacity: 1; }
}


.container {
    width: 90vw;
    height: 90vh;
    max-width: 1400px;
    max-height: 800px;
    display: flex;
    border: 1px solid var(--text-color);
    box-shadow: 0 0 15px var(--shadow-color), inset 0 0 10px var(--shadow-color);
    background: rgba(10, 10, 10, 0.5); /* 少し透明にして背景が見えるように */
}

.left-panel {
    width: 60%; /* 左側を少し広めに */
    height: 100%;
    display: flex;
    flex-direction: column;
    border-right: 1px solid var(--text-color);
}

.top-image-area video, .left-image-area img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* 比率を保ったままエリアを埋める */
    opacity: 0.7; /* 少し暗くして雰囲気を出す */
}

.top-image-area {
    height: 30%;
    background-color: #111;
    overflow: hidden;
    border-bottom: 1px solid var(--text-color);
}

.left-image-area {
    height: 70%;
    background-color: #000;
    overflow: hidden;
}

.top-image-area img, .left-image-area img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* 画像の比率を保ったままエリアを埋める */
    opacity: 0.7; /* 少し暗くして雰囲気を出す */
}

.right-panel {
    width: 40%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center; /* メニューを上下中央に */
    padding: 40px;
    box-sizing: border-box;
}

header {
    margin-bottom: 40px;
}

h1 {
    font-size: 3rem;
    text-align: left;
    text-shadow: 0 0 5px var(--shadow-color);
    margin: 0;
}

nav ul {
    list-style: none;
    padding: 0;
    text-align: left;
}

nav ul li {
    margin-bottom: 20px;
}

nav ul li a {
    color: var(--text-color);
    text-decoration: none;
    font-size: 1.8rem;
    transition: all 0.2s ease-in-out;
    display: inline-block;
}

nav ul li a:hover {
    background-color: var(--text-color);
    color: var(--bg-color);
    text-shadow: none;
    padding: 0 10px;
    transform: translateX(10px); /* ホバー時に少し右に動く */
}

/* グリッチエフェクト */
.glitch {
    position: relative;
    display: inline-block;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background: var(--bg-color);
}

.glitch::before {
    left: 2px;
    text-shadow: -2px 0 var(--glitch-color-1);
    animation: glitch-anim 3s infinite linear alternate-reverse;
}

.glitch::after {
    left: -2px;
    text-shadow: -2px 0 var(--glitch-color-2);
    animation: glitch-anim 2.5s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
    0%   { clip-path: inset(89% 0 1% 0); }
    5%   { clip-path: inset(34% 0 35% 0); }
    10%  { clip-path: inset(93% 0 4% 0); }
    15%  { clip-path: inset(49% 0 49% 0); }
    20%  { clip-path: inset(18% 0 42% 0); }
    /* ... アニメーションのキーフレーム（省略） ... */
    100% { clip-path: inset(69% 0 18% 0); }
}